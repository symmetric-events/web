/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    events: Event;
    trainers: Trainer;
    testimonials: Testimonial;
    categories: Category;
    orders: Order;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    trainers: TrainersSelect<false> | TrainersSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  slug: string;
  Title: string;
  status?: ('draft' | 'published' | 'archived') | null;
  category: (number | Category)[];
  'Event Dates': {
    'Start Date': string;
    'End Date': string;
    id?: string | null;
  }[];
  Price: {
    USD: number;
    EUR: number;
  };
  Description?: string | null;
  'Featured Image'?: string | null;
  'Key Topic'?:
    | {
        item: string;
        id?: string | null;
      }[]
    | null;
  'Why Attend'?:
    | {
        Title: string;
        Description: string;
        id?: string | null;
      }[]
    | null;
  'Training Experience'?:
    | {
        Title: string;
        Description: string;
        id?: string | null;
      }[]
    | null;
  'Learning Objectives'?:
    | {
        Title: string;
        Description: string;
        id?: string | null;
      }[]
    | null;
  Testimonials?: (number | Testimonial)[] | null;
  'Who Is Training For'?:
    | {
        item: string;
        id?: string | null;
      }[]
    | null;
  Trainers?: (number | Trainer)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  slug: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  text: string;
  author_name?: string | null;
  author_title?: string | null;
  author_company?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trainers".
 */
export interface Trainer {
  id: number;
  name: string;
  biography?: string | null;
  excerpt?: string | null;
  position?: string | null;
  image?: (number | null) | Media;
  image_url?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  sessionId: string;
  stripeSessionId?: string | null;
  stripePaymentIntentId?: string | null;
  status: 'draft' | 'pending' | 'pending_invoice' | 'paid' | 'failed' | 'cancelled' | 'abandoned';
  paymentMethod: 'card' | 'invoice';
  eventId?: string | null;
  eventTitle?: string | null;
  eventSlug?: string | null;
  quantity?: number | null;
  startDate?: string | null;
  endDate?: string | null;
  subtotalAmount?: number | null;
  discountAmount?: number | null;
  taxAmount?: number | null;
  paymentDueDate?: string | null;
  invoiceId?: string | null;
  invoiceNumber?: string | null;
  totalAmount: number;
  currency: string;
  priceEUR: number;
  priceUSD: number;
  customerEmail?: string | null;
  customerFirstName?: string | null;
  customerLastName?: string | null;
  customerCompany?: string | null;
  customerPhone?: string | null;
  address?: {
    country?: string | null;
    address1?: string | null;
    address2?: string | null;
    city?: string | null;
    state?: string | null;
    postcode?: string | null;
  };
  /**
   * Updated on each draft change
   */
  lastActivityAt?: string | null;
  abandonedAt?: string | null;
  completedAt?: string | null;
  vatNumber?: string | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'trainers';
        value: number | Trainer;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  slug?: T;
  Title?: T;
  status?: T;
  category?: T;
  'Event Dates'?:
    | T
    | {
        'Start Date'?: T;
        'End Date'?: T;
        id?: T;
      };
  Price?:
    | T
    | {
        USD?: T;
        EUR?: T;
      };
  Description?: T;
  'Featured Image'?: T;
  'Key Topic'?:
    | T
    | {
        item?: T;
        id?: T;
      };
  'Why Attend'?:
    | T
    | {
        Title?: T;
        Description?: T;
        id?: T;
      };
  'Training Experience'?:
    | T
    | {
        Title?: T;
        Description?: T;
        id?: T;
      };
  'Learning Objectives'?:
    | T
    | {
        Title?: T;
        Description?: T;
        id?: T;
      };
  Testimonials?: T;
  'Who Is Training For'?:
    | T
    | {
        item?: T;
        id?: T;
      };
  Trainers?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trainers_select".
 */
export interface TrainersSelect<T extends boolean = true> {
  name?: T;
  biography?: T;
  excerpt?: T;
  position?: T;
  image?: T;
  image_url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  text?: T;
  author_name?: T;
  author_title?: T;
  author_company?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  sessionId?: T;
  stripeSessionId?: T;
  stripePaymentIntentId?: T;
  status?: T;
  paymentMethod?: T;
  eventId?: T;
  eventTitle?: T;
  eventSlug?: T;
  quantity?: T;
  startDate?: T;
  endDate?: T;
  subtotalAmount?: T;
  discountAmount?: T;
  taxAmount?: T;
  paymentDueDate?: T;
  invoiceId?: T;
  invoiceNumber?: T;
  totalAmount?: T;
  currency?: T;
  priceEUR?: T;
  priceUSD?: T;
  customerEmail?: T;
  customerFirstName?: T;
  customerLastName?: T;
  customerCompany?: T;
  customerPhone?: T;
  address?:
    | T
    | {
        country?: T;
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        postcode?: T;
      };
  lastActivityAt?: T;
  abandonedAt?: T;
  completedAt?: T;
  vatNumber?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}